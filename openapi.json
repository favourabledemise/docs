{
    "schemes": ["https"],
    "swagger": "2.0",
    "info": {
        "description": "APIs fetchs the data based on query",
        "title": "ODIN APIs",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "staging.odinn.tech",
    "basePath": "/v1/",
    "paths": {
        "/certificates/count": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns the total no of records based on query",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Certificate"
                ],
                "summary": "Fetch the record count",
                "parameters": [
                    {
                        "description": "Count Query",
                        "name": "query",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/certificate.CertCountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/certificate.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/certificate.CertCount"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/certificate.ErrorResponse"
                        }
                    },
                    "408": {
                        "description": "Request Timeout",
                        "schema": {
                            "$ref": "#/definitions/certificate.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/certificate.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/certificates/scroll": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns the record based on query. It uses es scroll api for the pagination.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Certificate"
                ],
                "summary": "Fetch the record based on query",
                "parameters": [
                    {
                        "description": "Search Query",
                        "name": "query",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/certificate.CertScrollRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/certificate.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/certificate.CertScroll"
                                        },
                                        "pagination": {
                                            "$ref": "#/definitions/certificate.SearchPagination"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/certificate.ErrorResponse"
                        }
                    },
                    "408": {
                        "description": "Request Timeout",
                        "schema": {
                            "$ref": "#/definitions/certificate.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/certificate.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/certificates/scroll/next": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns the next batch of record based on query. It uses es scroll api for the pagination.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Certificate"
                ],
                "summary": "Fetch the next batch of record",
                "parameters": [
                    {
                        "description": "Search Query",
                        "name": "query",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/certificate.NextBatchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/certificate.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/certificate.CertScroll"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/certificate.ErrorResponse"
                        }
                    },
                    "408": {
                        "description": "Request Timeout",
                        "schema": {
                            "$ref": "#/definitions/certificate.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/certificate.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/certificates/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns the record based on query and blank query will return all records. It uses es searchafter for the pagination.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Certificate"
                ],
                "summary": "Fetch the record based on query",
                "parameters": [
                    {
                        "description": "Search Query",
                        "name": "query",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/certificate.CertSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/certificate.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/definitions/certificate.SearchPagination"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/certificate.ErrorResponse"
                        }
                    },
                    "408": {
                        "description": "Request Timeout",
                        "schema": {
                            "$ref": "#/definitions/certificate.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/certificate.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/certificates/summary": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns the summary of the field based on query",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Certificate"
                ],
                "summary": "Create the summary of the field based on query",
                "parameters": [
                    {
                        "description": "Summary",
                        "name": "query",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/certificate.CertSummaryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/certificate.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/eshandler.Aggregate"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/certificate.ErrorResponse"
                        }
                    },
                    "408": {
                        "description": "Request Timeout",
                        "schema": {
                            "$ref": "#/definitions/certificate.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/certificate.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/certificates/{hash}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns the complete certificate",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Certificate"
                ],
                "summary": "Fetch the complete certificate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "get the complete cert by hash",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/certificate.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/certificate.ErrorResponse"
                        }
                    },
                    "408": {
                        "description": "Request Timeout",
                        "schema": {
                            "$ref": "#/definitions/certificate.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/certificate.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/credits/usage": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get the user's credit usage details",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Credits"
                ],
                "summary": "Get the user's credit usage details",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tokens.UserTokenStats"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/tokens.ErrorResponse"
                        }
                    },
                    "408": {
                        "description": "Request Timeout",
                        "schema": {
                            "$ref": "#/definitions/tokens.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/tokens.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dns/count": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns the count of subdomain records based on domain",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dns"
                ],
                "summary": "Fetch the total no. of subdomain records",
                "parameters": [
                    {
                        "description": "Query",
                        "name": "query",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dns.DNSCountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dns.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dns.Data"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dns.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dns.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/dns/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns the subdomain records based on query",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dns"
                ],
                "summary": "Fetch the subdomain record",
                "parameters": [
                    {
                        "description": "Query",
                        "name": "query",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dns.DNSRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dns.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/definitions/dns.SearchPagination"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dns.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dns.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/exposed/buckets/count": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns exposed buckets count according to provided filters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ExposedBuckets"
                ],
                "summary": "Get exposed bucket count",
                "parameters": [
                    {
                        "description": "Count Request",
                        "name": "query",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/exposed.CountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/exposed.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/exposed.SearchCount"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/exposed/buckets/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns exposed buckets according to provided filters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ExposedBuckets"
                ],
                "summary": "Search exposed buckets",
                "parameters": [
                    {
                        "description": "Search Query",
                        "name": "query",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/exposed.SearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/exposed.BucketAPIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/exposed/buckets/summary": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns exposed buckets aggregated count according to provided filters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ExposedBuckets"
                ],
                "summary": "exposed buckets summary",
                "parameters": [
                    {
                        "description": "Summary Request",
                        "name": "query",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/exposed.SummaryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/exposed.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/exposed.Aggregate"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/exposed/files/count": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns overall count of exposed bucket files according to provided filters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ExposedFiles"
                ],
                "summary": "Get file count",
                "parameters": [
                    {
                        "description": "Count Request",
                        "name": "query",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/exposed.CountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/exposed.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/exposed.SearchCount"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/exposed/files/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "returns the matching records according to provided filters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ExposedFiles"
                ],
                "summary": "search exposed bucket files",
                "parameters": [
                    {
                        "description": "Search Query",
                        "name": "query",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/exposed.SearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/exposed.FileAPIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/exposed/files/summary": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns a summary of exposed bucket files according to provided filters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ExposedFiles"
                ],
                "summary": "Get file summary",
                "parameters": [
                    {
                        "description": "Summary Request",
                        "name": "query",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/exposed.SummaryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/exposed.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/exposed.Aggregate"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/exposed/{category}/": {
            "get": {
                "description": "Returns the fields data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Fields"
                ],
                "summary": "Get the fields data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "get the category",
                        "name": "category",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/fields.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "Data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/fields.Field"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/fields.ErrorResponse"
                        }
                    },
                    "408": {
                        "description": "Request Timeout",
                        "schema": {
                            "$ref": "#/definitions/fields.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/fields.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fields/certificates/{category}/": {
            "get": {
                "description": "Returns the fields data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Fields"
                ],
                "summary": "Get the fields data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "get the category",
                        "name": "category",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/fields.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/fields.ErrorResponse"
                        }
                    },
                    "408": {
                        "description": "Request Timeout",
                        "schema": {
                            "$ref": "#/definitions/fields.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/fields.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/fields/hosts/{category}/": {
            "get": {
                "description": "Returns the fields data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Fields"
                ],
                "summary": "Get the fields data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "get the category",
                        "name": "category",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/fields.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/fields.ErrorResponse"
                        }
                    },
                    "408": {
                        "description": "Request Timeout",
                        "schema": {
                            "$ref": "#/definitions/fields.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/fields.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/hosts/count": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns the total no of records based on query",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hosts"
                ],
                "summary": "Fetch the record count",
                "parameters": [
                    {
                        "description": "Count Query",
                        "name": "query",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ipservices.CountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ipservices.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/ipservices.CertCount"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ipservices.ErrorResponse"
                        }
                    },
                    "408": {
                        "description": "Request Timeout",
                        "schema": {
                            "$ref": "#/definitions/ipservices.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ipservices.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/hosts/cve/{ip}/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns the complete ip cve details",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hosts"
                ],
                "summary": "Fetch the ip cve details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "get the ip",
                        "name": "ip",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ipservices.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ipservices.ErrorResponse"
                        }
                    },
                    "408": {
                        "description": "Request Timeout",
                        "schema": {
                            "$ref": "#/definitions/ipservices.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ipservices.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/hosts/exploits/{ip}/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns the complete ip cve-exploits details",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hosts"
                ],
                "summary": "Fetch the ip cve details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "get the ip",
                        "name": "ip",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ipservices.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ipservices.ErrorResponse"
                        }
                    },
                    "408": {
                        "description": "Request Timeout",
                        "schema": {
                            "$ref": "#/definitions/ipservices.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ipservices.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/hosts/filtered/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns the record based on query and blank query will return all records. It uses es searchafter for the pagination.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hosts"
                ],
                "summary": "Fetch the record based on query",
                "parameters": [
                    {
                        "description": "Search Query",
                        "name": "query",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ipservices.SearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ipservices.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/definitions/ipservices.SearchPagination"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ipservices.ErrorResponse"
                        }
                    },
                    "408": {
                        "description": "Request Timeout",
                        "schema": {
                            "$ref": "#/definitions/ipservices.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ipservices.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/hosts/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns the record based on query and blank query will return all records. It uses es searchafter for the pagination.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hosts"
                ],
                "summary": "Fetch the record based on query",
                "parameters": [
                    {
                        "description": "Search Query",
                        "name": "query",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ipservices.SearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ipservices.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/definitions/ipservices.SearchPagination"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ipservices.ErrorResponse"
                        }
                    },
                    "408": {
                        "description": "Request Timeout",
                        "schema": {
                            "$ref": "#/definitions/ipservices.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ipservices.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/hosts/summary": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns the summary of the field based on query",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hosts"
                ],
                "summary": "Create the summary of the field based on query",
                "parameters": [
                    {
                        "description": "Summary",
                        "name": "query",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ipservices.SummaryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ipservices.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/eshandler.Aggregate"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ipservices.ErrorResponse"
                        }
                    },
                    "408": {
                        "description": "Request Timeout",
                        "schema": {
                            "$ref": "#/definitions/ipservices.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ipservices.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/hosts/{ip}/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns the complete ip details",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hosts"
                ],
                "summary": "Fetch the latest ip details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "get the ip",
                        "name": "ip",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ipservices.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ipservices.ErrorResponse"
                        }
                    },
                    "408": {
                        "description": "Request Timeout",
                        "schema": {
                            "$ref": "#/definitions/ipservices.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ipservices.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Returns the pong as response",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Health"
                ],
                "summary": "Health Check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "certificate.APIResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "pagination": {},
                "success": {
                    "type": "boolean"
                }
            }
        },
        "certificate.CertCount": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                }
            }
        },
        "certificate.CertCountRequest": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string"
                }
            }
        },
        "certificate.CertScroll": {
            "type": "object",
            "properties": {
                "certificates": {
                    "type": "array",
                    "items": {}
                },
                "next_batch": {
                    "type": "string"
                }
            }
        },
        "certificate.CertScrollRequest": {
            "type": "object",
            "required": [
                "limit",
                "query"
            ],
            "properties": {
                "from": {
                    "type": "integer"
                },
                "limit": {
                    "type": "integer"
                },
                "query": {
                    "type": "string"
                }
            }
        },
        "certificate.CertSearchRequest": {
            "type": "object",
            "required": [
                "limit"
            ],
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "query": {
                    "type": "string"
                },
                "start": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                }
            }
        },
        "certificate.CertSummaryRequest": {
            "type": "object",
            "required": [
                "field",
                "limit"
            ],
            "properties": {
                "field": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "query": {
                    "type": "string"
                }
            }
        },
        "certificate.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "certificate.NextBatchRequest": {
            "type": "object",
            "required": [
                "scroll_token"
            ],
            "properties": {
                "scroll_token": {
                    "type": "string"
                }
            }
        },
        "certificate.SearchPagination": {
            "type": "object",
            "properties": {
                "last": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "start": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "dns.APIResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "pagination": {},
                "success": {
                    "type": "boolean"
                }
            }
        },
        "dns.DNSCountRequest": {
            "type": "object",
            "required": [
                "domain"
            ],
            "properties": {
                "domain": {
                    "type": "string"
                },
                "publishedAfter": {
                    "type": "string"
                },
                "publishedBefore": {
                    "type": "string"
                }
            }
        },
        "dns.DNSRequest": {
            "type": "object",
            "required": [
                "domain",
                "limit"
            ],
            "properties": {
                "domain": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "publishedAfter": {
                    "type": "string"
                },
                "publishedBefore": {
                    "type": "string"
                },
                "start": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                }
            }
        },
        "dns.Data": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                }
            }
        },
        "dns.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "dns.SearchPagination": {
            "type": "object",
            "properties": {
                "last": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "start": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "eshandler.Aggregate": {
            "type": "object",
            "properties": {
                "buckets": {
                    "type": "array",
                    "items": {}
                },
                "doc_count_error_upper_bound": {
                    "type": "integer"
                },
                "sum_other_doc_count": {
                    "type": "integer"
                }
            }
        },
        "exposed.APIResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "pagination": {},
                "success": {
                    "type": "boolean"
                }
            }
        },
        "exposed.Aggregate": {
            "type": "object",
            "properties": {
                "buckets": {
                    "type": "array",
                    "items": {}
                },
                "doc_count_error_upper_bound": {
                    "type": "integer"
                },
                "sum_other_doc_count": {
                    "type": "integer"
                }
            }
        },
        "exposed.Bucket": {
            "type": "object",
            "properties": {
                "age_in_days": {
                    "type": "integer"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "deleted": {
                    "type": "boolean"
                },
                "ef_mod_at": {
                    "type": "string"
                },
                "file_cat_count": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "files": {
                    "type": "integer"
                },
                "ins_at": {
                    "type": "string"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "last_found_at": {
                    "type": "string"
                },
                "last_open_at": {
                    "type": "string"
                },
                "lf_mod_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "new_files": {
                    "type": "integer"
                },
                "open": {
                    "type": "boolean"
                },
                "owner_id": {
                    "type": "string"
                },
                "prev_scan_at": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "scan_at": {
                    "type": "string"
                },
                "sensitive_files": {
                    "type": "integer"
                }
            }
        },
        "exposed.BucketAPIResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/exposed.Bucket"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/exposed.SearchPagination"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "exposed.CountRequest": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string"
                }
            }
        },
        "exposed.File": {
            "type": "object",
            "properties": {
                "accessible": {
                    "type": "boolean"
                },
                "bucket": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "etag": {
                    "type": "string"
                },
                "ext": {
                    "type": "string"
                },
                "ext_desc": {
                    "type": "string"
                },
                "ins_at": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "mod_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "scan_at": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "exposed.FileAPIResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/exposed.File"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/exposed.SearchPagination"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "exposed.SearchCount": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                }
            }
        },
        "exposed.SearchPagination": {
            "type": "object",
            "properties": {
                "last": {
                    "type": "array",
                    "items": {}
                },
                "limit": {
                    "type": "integer"
                },
                "start": {
                    "type": "array",
                    "items": {}
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "exposed.SearchRequest": {
            "type": "object",
            "required": [
                "limit"
            ],
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "query": {
                    "type": "string"
                },
                "sort_by": {
                    "type": "string"
                },
                "sort_dir": {
                    "type": "string"
                },
                "start": {
                    "type": "array",
                    "items": {}
                }
            }
        },
        "exposed.SummaryRequest": {
            "type": "object",
            "required": [
                "field",
                "limit"
            ],
            "properties": {
                "field": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "query": {
                    "type": "string"
                }
            }
        },
        "fields.APIResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "pagination": {},
                "success": {
                    "type": "boolean"
                }
            }
        },
        "fields.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "fields.Field": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "display_category": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "ipservices.APIResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "pagination": {},
                "success": {
                    "type": "boolean"
                }
            }
        },
        "ipservices.CertCount": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                }
            }
        },
        "ipservices.CountRequest": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string"
                }
            }
        },
        "ipservices.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "ipservices.SearchPagination": {
            "type": "object",
            "properties": {
                "last": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "start": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "ipservices.SearchRequest": {
            "type": "object",
            "required": [
                "limit"
            ],
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "query": {
                    "type": "string"
                },
                "start": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                }
            }
        },
        "ipservices.SummaryRequest": {
            "type": "object",
            "required": [
                "field",
                "limit"
            ],
            "properties": {
                "field": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "query": {
                    "type": "string"
                }
            }
        },
        "tokens.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "tokens.UserTokenStats": {
            "type": "object",
            "properties": {
                "expires_on": {
                    "type": "integer"
                },
                "left": {
                    "type": "integer"
                },
                "plan": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "X-API-Key",
            "in": "header"
        }
    }
}